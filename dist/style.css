@charset "UTF-8";
/* Здесь вы напишете основную часть стилей страницы.

Будьте внимательны! Для корректной работы скриптов на этом сайте нужно, чтобы в HTML некоторые классы были названы особым образом:
✦ theme-dark — класс тёмной темы
✦ theme-light — класс светлой темы
✦ like-icon — для svg-иконки анимированного сердца
✦ card__like-button — для кнопки Like рядом с иконкой
✦ card__icon-button — для кнопки, оборачивающей иконку
✦ card__icon-button — для кнопки, оборачивающей иконку
✦ is-liked — для обозначения состояния лайкнутой иконки в виде сердца
✦ button__text — для обозначения текстового элемента внутри кнопки

Кроме этого, не меняйте HTML переключателя тем. Его разметка также гарантирует работу своего скрипта.

*/
/* В этом файле вы импортируете все шрифты для сайта. Один из них вариативный и требует особенной настройки */
@font-face {
  font-family: "Inter";
  src: local("Inter"), url("/fonts/Inter-Variable.woff2") format("woff2 supports variations"), url("/fonts/Inter-Variable.woff2") format("woff2-variations");
  font-weight: 400 785;
  font-display: swap;
}
@font-face {
  font-family: "PressStart2P";
  src: local("PressStart2P-Regular"), url("/fonts/PressStart2P-Regular.woff") format("woff");
  font-weight: normal;
  font-display: swap;
}
/* В этом файле будут храниться все значения переменных в исходном состоянии, а так же их изменения в зависимости от ширины устройства */
:root {
  --main-font: "Inter", sans-serif;
  --accept-font: "PressStart2P";
  --text-color: #000000;
  --main-color: #00cc14;
  --background-color: #000;
  --button-text-color: #00cc14;
  --font-weight-title: 700;
  --font-weight-content: 400;
  --background-image:
      repeating-linear-gradient(90deg, black 0px 2px, rgba(0, 0, 0, 0) 2px 4px),
      repeating-linear-gradient(180deg, black 0px 2px, rgba(0, 0, 0, 0) 2px 4px),
      linear-gradient(180deg, #007f0c 0%, #004306 100%);
  --like-contour-color: var(--text-color);
  --like-sparks-color: #ff0000;
  --heart-contour-color: #000;
}

/* В этом файле вы опишете значения переменных в разных цветовых схемах.
Придерживайтесь такого именования классов:
✦ theme-dark — класс тёмной темы
✦ theme-light — класс светлой темы
✦ не забудьте описать стили для изменения темы через медизапрос пользовательских предпочтений
*/
:root.theme-dark {
  --main-color: #00cc14;
  --background-color: #000;
  --button-text-color: #00cc14;
  --font-weight-title: 785;
  --font-weight-content: 465;
  --background-image:
      repeating-linear-gradient(90deg, black 0px 2px, rgba(0, 0, 0, 0) 2px 4px),
      repeating-linear-gradient(180deg, black 0px 2px, rgba(0, 0, 0, 0) 2px 4px),
      linear-gradient(180deg, #007f0c 0%, #004306 100%);
}

:root.theme-light {
  --main-color: #000;
  --background-color: #fff;
  --button-text-color: #000;
  --font-weight-title: 700;
  --font-weight-content: 400;
  --background-image:
      repeating-linear-gradient(90deg, #d3d3d3 0px 2px, rgba(0, 0, 0, 0) 2px 4px),
      repeating-linear-gradient(180deg, #d3d3d3 0px 2px, rgba(0, 0, 0, 0) 2px 4px),
      linear-gradient(180deg, #e7e7e7 0%, #1a1a1a 100%);
}

@media (prefers-color-scheme: dark) {
  :root {
    --main-color: #00cc14;
    --background-color: #000;
    --button-text-color: #00cc14;
    --font-weight-title: 785;
    --font-weight-content: 465;
    --background-image:
        repeating-linear-gradient(90deg, black 0px 2px, rgba(0, 0, 0, 0) 2px 4px),
        repeating-linear-gradient(180deg, black 0px 2px, rgba(0, 0, 0, 0) 2px 4px),
        linear-gradient(180deg, #007f0c 0%, #004306 100%);
  }
}
/* Опишите в этом файле все keyframes для проекта и стили анимаций иконки Like.

Будьте внимательны! Для корректной работы скриптов на этом сайте нужно, чтобы в HTML некоторые классы были названы особым образом:
✦ theme-dark — класс тёмной темы
✦ theme-light — класс светлой темы
✦ like-icon — для svg-иконки анимированного сердца
✦ card__like-button — для кнопки Like рядом с иконкой
✦ card__icon-button — для кнопки, оборачивающей иконку
✦ card__icon-button — для кнопки, оборачивающей иконку
✦ is-liked — для обозначения состояния лайкнутой иконки в виде сердца
✦ button__text — для обозначения текстового элемента внутри кнопки

Кроме этого, не меняйте HTML переключателя тем. Его разметка также гарантирует работу своего скрипта.
*/
@keyframes arrow {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(-4px);
  }
}
@keyframes icon-size {
  0% {
    transform: scale(1);
  }
  100% {
    transform: scale(1.5);
  }
}
@keyframes sparks {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
.like-icon .core {
  transition: fill 0.3s linear 0.03s;
}

.like-icon .contour {
  transition: fill 0.3s 0.06s;
  fill: var(--like-contour-color);
}

.like-icon .sparks {
  opacity: 0;
}

.like-icon .main-body {
  fill: var(--background-color);
  transition: fill 0.3s linear;
}

.like-icon:active .core {
  fill: var(--like-sparks-color);
  transition: fill 0.3s linear;
}

.like-icon:active .main-body {
  fill: var(--like-sparks-color);
  transition: fill 0.3s linear 0.05s;
}

.like-icon:hover .core {
  fill: var(--like-contour-color);
  transition: fill 0.3s linear;
}

.like-icon:hover .main-body {
  fill: var(--like-contour-color);
  transition: fill 0.3s linear 0.05s;
}

.like-icon.is-liked .core {
  fill: var(--like-sparks-color);
  transition: fill 0.3s linear;
}

.like-icon.is-liked .contour {
  fill: var(--like-sparks-color);
  transition: fill 0.3s linear 0.06s;
}

.like-icon.is-liked .main-body {
  fill: var(--like-sparks-color);
  transition: fill 0.3s linear 0.05s;
}

.like-icon.is-liked .heart {
  animation: icon-size 0.3s ease-in 0.1s alternate;
  transform-origin: center;
}

.like-icon.is-liked .sparks {
  animation: 0.3s sparks ease-in 0.3s alternate;
}

/* В этом файле уже написаны некоторые базовые стили, которые сбрасывают или преобразуют дефольное браузерное поведение.
Здесь же лежит утилитарный класс visually-hidden на случай, если нужно скрыть какой-то элемент, но оставить доступным для скринридера.
Вы можете изменять этот файл или дополнять. Но скорее всего, вам это не потребуется. */
*,
*::after,
*::before {
  box-sizing: border-box;
}

body {
  margin: 0;
}

h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
li {
  margin: 0;
  padding: 0;
}

a {
  color: inherit;
}

button,
input {
  color: currentColor;
  font-family: inherit;
  font-size: inherit;
}

ul,
ol {
  list-style: none;
}

.visually-hidden {
  position: absolute;
  inline-size: 1px;
  block-size: 1px;
  overflow: hidden;
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
          clip-path: inset(50%);
  white-space: nowrap;
}

.header {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding-top: 136px;
  padding-bottom: 25px;
  padding-left: 120.5px;
  padding-right: 120.5px;
  background-color: var(--background-color);
  border: 2px solid currentColor;
  font-family: var(--accept-font);
}
.header__title {
  font-size: clamp(3.0625rem, 2.7104rem + 1.5023vw, 4.0625rem);
  text-transform: uppercase;
  line-height: 1;
}
.header__description {
  margin-block-start: 20px;
  margin-block-end: 21px;
  text-transform: uppercase;
  font-size: clamp(0.875rem, 0.6769rem + 0.8451vw, 1.4375rem);
  line-height: 1;
}

.theme-menu__list {
  display: grid;
  gap: 14px;
  padding-left: 18px;
}
.theme-menu__button {
  position: relative;
  padding: inherit;
  font-size: 14px;
  text-transform: uppercase;
  background-color: transparent;
  border: none;
  cursor: pointer;
  transition: opacity ease 0.3s;
}
.theme-menu__button::after {
  position: absolute;
  content: "";
  width: 100%;
  height: 2px;
  bottom: -3px;
  left: 0;
  background-color: currentColor;
  transform-origin: left;
  scale: 0 1;
  transition: scale ease 0.3s;
}
.theme-menu__button:hover {
  opacity: 0.6;
}
.theme-menu__button:focus {
  opacity: 0.6;
  outline: none;
}
.theme-menu__button:focus-visible {
  opacity: 0.6;
}
.theme-menu__button:focus-visible::after {
  scale: 1;
}
.theme-menu__button::before {
  content: "▶";
  position: absolute;
  left: -20px;
  visibility: hidden;
  animation: arrow 0.5s ease-in-out infinite alternate;
}
.theme-menu__button:disabled {
  opacity: 0.6;
  pointer-events: none;
}
.theme-menu__button:disabled::before {
  visibility: visible;
}

.main {
  display: grid;
  justify-items: center;
  margin-block-start: 100px;
  margin-block-end: 50px;
}

.card {
  background-color: var(--background-color);
  border: 2px solid currentColor;
  max-width: 696px;
}
.card-list__item {
  display: grid;
  justify-items: center;
  gap: 50px;
}
.card__title {
  padding: 5px 10px;
  font-size: 18px;
  font-variation-settings: var(--font-weight-title);
}
.card__image-label {
  position: absolute;
  opacity: 0.5;
  color: var(--button-text-color);
  font-family: var(--accept-font);
  font-size: 14px;
  text-shadow: 0 0 1px var(--background-color);
  inset-inline-end: 20px;
  inset-block-start: 24px;
  mix-blend-mode: hard-light;
}
@supports (-webkit-text-stroke: 1px var(--background-color)) {
  .card__image-label {
    -webkit-text-stroke: 1px var(--background-color);
    text-shadow: none;
  }
}
.card__image-wrapper {
  position: relative;
  overflow: hidden;
  width: 100%;
}
.card__image {
  display: block;
  inline-size: 100%;
  aspect-ratio: 1/1;
}
.card__content {
  padding: 27px 25px 25px 25px;
  font-size: 18px;
  line-height: 21px;
  display: flex;
  flex-direction: column;
  gap: 27px;
}
.card__image--blur {
  filter: blur(0.3rem);
}
.card__image--grayscale {
  filter: grayscale(0.95);
}
.card__image--saturate {
  filter: saturate(400%);
}
.card__image--sepia {
  filter: sepia(1);
}
.card__image--hue-rotate {
  filter: hue-rotate(35deg);
}
.card__image--invert {
  filter: invert(1);
}
.card__image--custom {
  filter: contrast(0.5) grayscale(0.1) hue-rotate(110deg) brightness(150%);
}
.card__button {
  display: flex;
  justify-content: end;
}
.card__like-button {
  min-width: 130px;
}
.card__button-specification {
  position: relative;
  cursor: pointer;
  border: 2px solid currentColor;
  background: var(--background-color);
  padding: 10px 36px;
  font-family: var(--accept-font);
  font-size: 14px;
  transition: box-shadow ease 0.3s;
}
.card__button-specification:focus {
  outline: none;
}
.card__button-specification:focus-visible {
  box-shadow: 2px 2px 0px 0px var(--background-color);
}
.card__button-specification::before {
  content: "";
  position: absolute;
  display: block;
  inline-size: 100%;
  block-size: 100%;
  background-color: var(--background-color);
  border: inherit;
  transform: scaleX(0);
  transform-origin: left;
  transition: scale ease-in-out 0.5s;
}
.card .button-fillable:hover::before {
  scale: 1;
}
.card__icon-button {
  transition: border-color 0.3s ease;
  cursor: pointer;
  background-color: transparent;
  padding: 0;
  border: 2px solid transparent;
}
.card .card__icon-button:focus {
  outline: none;
}
.card .card__icon-button:focus-visible {
  border: 2px solid var(--color_accent);
}

.footer {
  background: var(--background-color);
  display: flex;
  justify-content: center;
}
.footer__button {
  gap: 8px;
  padding: 18.5px 21px;
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  border: 2px solid var(--main-color);
  position: relative;
  width: 335px;
}
.footer__icon {
  width: 21px;
  height: 21px;
}

.modal {
  border: 2px solid var(--button-text-color);
  padding: 25px 30px;
  color: var(--button-text-color);
  font-family: var(--accept-font);
  line-height: 21px;
  font-weight: 400;
  text-transform: uppercase;
  background: var(--background-color);
  max-width: 353px;
}
.modal::backdrop {
  background-color: black;
  opacity: 0.75;
}
.modal[open] {
  display: grid;
  grid-template-rows: repeat(2, min-content);
  gap: 30px;
}
.modal__content {
  display: flex;
  align-items: center;
  gap: 16px;
}
.modal__icon {
  flex-shrink: 0;
  max-width: 39px;
  max-height: 39px;
}
.modal__text {
  font-family: var(--accent-font);
  font-size: 14px;
  line-height: 21px;
  text-transform: uppercase;
}
.modal__button {
  width: 100%;
  text-transform: uppercase;
  padding: 9px 17px;
}

.page {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding-top: 100px;
  padding-bottom: 100px;
  font-family: var(--main-font);
  font-variation-settings: var(---font-weight-content);
  background-color: var(--background-color);
  color: var(--main-color);
  background-image: var(--background-image);
  background-size: cover;
  background-position: center;
  background-attachment: fixed;
  min-inline-size: 320px;
  min-block-size: 100dvb;
}/*# sourceMappingURL=style.css.map */